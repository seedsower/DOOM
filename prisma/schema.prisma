// DOOM Protocol Database Schema
// Tracks token claims, user verification, and protocol metrics

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("postgresql://neondb_owner:npg_weN7X0hUZfon@ep-orange-mode-aenha8zd-pooler.c-2.us-east-2.aws.neon.tech/neondb?channel_binding=require&sslmode=require")
  // Expected format: postgresql://neondb_owner:password@host/neondb?sslmode=require&channel_binding=require
}

model TokenClaim {
  id            String   @id @default(cuid())
  walletAddress String   @unique
  questionId    String
  answerHash    String
  claimedAt     DateTime @default(now())
  txSignature   String?  // Solana transaction signature
  amount        Int      @default(734)
  metadata      Json?    // Additional claim metadata
  
  @@map("token_claims")
}

model VerificationAttempt {
  id            String   @id @default(cuid())
  walletAddress String
  questionId    String
  answerHash    String
  isCorrect     Boolean
  attemptedAt   DateTime @default(now())
  ipAddress     String?
  userAgent     String?
  
  @@map("verification_attempts")
}

model ProtocolMetrics {
  id              String   @id @default(cuid())
  totalClaims     Int      @default(0)
  totalTokensMinted BigInt @default(0)
  lastClaimAt     DateTime?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  @@map("protocol_metrics")
}

model Question {
  id           String   @id @default(cuid())
  questionText String
  answerHash   String   // SHA-256 hash of correct answer
  hint         String?
  difficulty   Int      @default(1) // 1-10 scale
  isActive     Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  
  @@map("questions")
}

model BunkerAccess {
  id            String   @id @default(cuid())
  walletAddress String   @unique
  accessLevel   Int      @default(1) // 1=basic, 2=advanced, etc.
  tokenBalance  BigInt   @default(0)
  lastChecked   DateTime @default(now())
  
  @@map("bunker_access")
}
